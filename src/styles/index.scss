$scyan: rgb(10, 221, 245, 0.1);
$stcyan: rgb(10, 221, 245, 0.9);
$swhite: rgba(255, 255, 255, 0.8);

:root {
  --terracota: #d04b00;
  --react-bg: #000000dd;
  --secondary-color: rgba(17, 17, 17, 0.8);
  --tertiary-color: rgb(73, 73, 73, 0.7);
  --ant--secondary-color: #fff;
  --ant--tertiary-color: #c0bcbce8;
  --frmpd: 0.375rem 0.75rem 0.375rem 0.75rem;
  --scyan: rgb(10, 221, 245, 0.1);
  --stcyan: rgb(10, 221, 245, 0.9);
  --swhite: rgba(255, 255, 255, 0.8);
  --bslikesd: 0.2vh 0.2vh 0.2vh grey;
}

@mixin fCt {
  display: flex;
  align-items: center;
  align-content: center;
  justify-content: center;
  justify-items: center;
}

@mixin fCNoW {
  display: flex;
  flex-flow: column nowrap;
}

@mixin fNoW {
  display: flex;
  flex-wrap: nowrap;
}

@mixin fRNoW {
  display: flex;
  flex-flow: row nowrap;
}

@mixin fStart {
  display: flex;
  align-items: flex-start;
  align-content: flex-start;
  vertical-align: middle;
}

@mixin maxCGapped($num, $unit) {
  width: max-content;
  column-gap: #{$num}#{$unit};
}

@mixin maxSize($num1, $unit1, $num2, $unit2) {
  max-width: #{$num1}#{$unit1};
  max-height: #{$num2}#{$unit2};
}

@mixin minMaxW($num1, $unit1, $num2, $unit2) {
  min-width: #{$num1}#{$unit1};
  max-width: #{$num2}#{$unit2};
}

@mixin modalDlgBSLike() {
  position: relative;
  animation: dropIn 0.3s ease-out forwards, fadeIn 0.6s ease-in-out forwards;
}

@mixin noSpace {
  padding: 0;
  margin: 0;
}

@mixin size($num1, $unit1, $num2, $unit2) {
  width: #{$num1}#{$unit1};
  height: #{$num2}#{$unit2};
}

@mixin symGap($num) {
  column-gap: #{$num}vw;
  row-gap: #{$num}vh;
}

@mixin widCGap($num1, $unit1, $num2, $unit2) {
  width: #{$num1}#{$unit1};
  column-gap: #{$num2}#{$unit2};
}

@mixin validityWarn($color) {
  display: block;
  height: 0.8rem;
  color: $color;
}

@mixin fNoWC {
  display: flex;
  flex-flow: nowrap column;
}

@mixin fNoWR {
  display: flex;
  flex-flow: row nowrap;
}

@mixin fCt {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin size($num1, $unit1, $num2, $unit2) {
  width: #{$num1}#{$unit1};
  height: #{$num2}#{$unit2};
}

@mixin footerHText {
  margin: 0 0 0.75rem;
  font-size: 0.75rem;
  line-height: 1.3125rem;
  font-weight: 700;
  text-transform: uppercase;
}

@mixin footBText {
  font-size: 0.875rem;
  line-height: 1.3125rem;
}

@mixin modal($size, $left, $z) {
  @include fNoWC;
  @include size($size, "vw", "max-content", "");
  position: relative;
  animation: dropIn 0.3s ease-out forwards, fadeIn 0.6s ease-in-out forwards;
  left: #{$left}#{"%"};
  padding: 2rem;
  border-radius: var(--bs-border-radius);
  box-shadow: 0 0 0.6rem rgba(0, 0, 0, 0.3);
  z-index: $z;
  &::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }
}

%empPhDate {
  &:focus {
    color: black !important;
  }
  &:empty {
    color: transparent;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes dropIn {
  0% {
    top: -45%;
  }
  50% {
    top: 0%;
  }
  100% {
    top: 5%;
  }
}

@keyframes highlight {
  0% {
    filter: contrast(1);
  }
  50% {
    filter: contrast(0.5);
  }
  100% {
    filter: contrast(1);
  }
}

@keyframes hueSubtChange {
  0% {
    filter: hue-rotate(0);
  }
  50% {
    filter: hue-rotate(30deg);
  }
  100% {
    filter: hue-rotate(0);
  }
}

@supports (scrollbar-color: red blue) {
  * {
    scrollbar-color: rgb(54, 53, 53) #00000075;
  }
}

@supports (scrollbar-gutter: stable) {
  *:not(input):not(.carousel):not(.carousel > *) {
    scrollbar-gutter: stable;
  }
}

*,
*::after,
*::before {
  @include noSpace;
}

html {
  background-color: var(--react-bg);
}

body {
  background-image: radial-gradient(circle at center, #918f8f25, #00000038),
    url(../../public/img/dall-e-landscape-nelf.jpeg);
}

body,
progress::-moz-progress-bar,
progress::-ms-fill,
progress::-webkit-progress-value {
  background: var(--scyan);
}

a,
.fSectSocialSvg,
.listEl .itemListElFooter {
  cursor: pointer;
}

button {
  &:hover {
    animation: highlight 2s infinite ease-in-out,
      hueSubtChange 2s infinite ease-in-out;
  }
  &:not(.active):not(.btn-primary) {
    &:hover {
      animation: highlight 2s infinite ease-in-out,
        hueSubtChange 2s infinite ease-in-out;
    }
  }
  &.btn {
    box-shadow: 0.1rem 0.1rem 0.1rem 0.05rem rgba(0, 0, 0, 0.5);
    text-shadow: 0.1rem 0.1rem 0.1rem rgba(0, 0, 0, 0.5);
  }
}

a {
  &:hover {
    animation: highlight 2s infinite ease-in-out;
  }
}

header {
  &:has(.headerCaseSpread) {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .headerCaseSpread {
    height: fit-content;
    width: fit-content;
    img {
      width: 100%;
      max-width: 18rem;
      padding-left: 1vw;
    }
  }
}

input {
  &[type="date"] {
    &:empty,
    &:required:invalid,
    &.form-control.dfPhDate {
      @extend %empPhDate;
    }
  }
  &[type="checkbox"] {
    &.mdGreen {
      box-shadow: var(--bslikesd);
    }
  }
}

input[type="date"],
.datBtn {
  @include minMaxW(16, "ch", 36, "ch");
}

.accordion {
  &:has(svg) {
    padding-right: 3vw;
    padding-bottom: 3vw;
  }
}

.App {
  @include fNoWR;
  @include fCt;
  max-width: 100vw;
}

.App-body {
  display: grid;
  min-width: fit-content;
  width: fit-content;
  grid-template-columns: 4fr 0.75fr;
  grid-template-rows: 100%;
  align-items: center;
  justify-content: center;
  gap: 2vw;
  border-radius: 0.5rem;
  opacity: 1;
  z-index: 10;
  section:not(.singleBtnSect) {
    display: grid;
    min-width: fit-content;
    grid-template-columns: repeat(4, 1fr);
    gap: 2vw;
    padding-left: 1%;
  }
  section:is(.singleBtnSect) {
    display: flex;
    justify-content: center;
    align-items: center;
    min-width: min-content;
    width: fit-content;
    max-width: max-content;
  }
  button {
    &.btn {
      height: min-content;
      max-height: fit-content;
    }
  }
}

.backdrop {
  position: relative;
  width: 50vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 900;
}

.biBtn {
  @include noSpace;
  &:is(.countAntMed),
  > .bi {
    @include size(2, "vw", 2.3, "vh");
  }
}

.blBg {
  background-color: var(--react-bg);
}

.btn {
  &.btn-primary {
    --bs-btn-border-color: transparent;
    &:hover {
      --bs-btn-border-color: transparent;
      border-color: transparent;
    }
    &#btnStart {
      font-weight: bold;
      background: linear-gradient(
        to bottom,
        rgba(0, 41, 128, 0.801) 0%,
        rgba(0, 0, 255, 0.726) 100%
      );
    }
    &#btnChars {
      background: linear-gradient(
        to bottom,
        rgba(128, 62, 0, 0.801) 0%,
        rgba(255, 230, 0, 0.726) 100%
      );
    }
    &#btnClasses {
      background: linear-gradient(
        to bottom,
        rgba(11, 128, 0, 0.801) 0%,
        rgba(101, 201, 8, 0.726) 100%
      );
    }
    &#btnDlgRaces {
      background: linear-gradient(
        to bottom,
        rgba(128, 0, 60, 0.801) 0%,
        rgba(255, 0, 149, 0.726) 100%
      );
    }
    &#btnCreat {
      background: linear-gradient(
        to bottom,
        rgba(76, 3, 117, 0.801) 0%,
        rgba(108, 6, 202, 0.726) 100%
      );
    }
  }
  &.btn-success {
    background: linear-gradient(
      to bottom,
      rgba(11, 128, 0, 0.801) 0%,
      rgba(101, 201, 8, 0.726) 100%
    );
  }
  &.btn-warning {
    background: linear-gradient(
      to bottom,
      rgba(198, 182, 9, 0.566) 0%,
      rgba(255, 230, 0, 0.726) 100%
    );
  }
}

.btnsDiv {
  @include fRNoW;
  column-gap: 0.4rem;
}

.carousel {
  max-height: 100vh;
  box-shadow: 0.2rem 0.5rem 1rem 0.2rem var(--react-bg);
  border: 0.15rem outset var(--tertiary-color);
  border-radius: 0.2rem;
}

.carouselParent {
  max-height: 100%;
}

.carouselParent,
.carousel {
  max-width: 100vw;
}

.charCard {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  margin-bottom: 1.7vh;
  .charImg {
    &:hover {
      animation: highlight 2s infinite ease-in-out;
    }
  }
  .charCaption {
    font-weight: bold;
    width: 80%;
    text-align: center;
  }
}

.charsDlg {
  background: radial-gradient(circle at center, #d6d2d2ea, #696767de);
  border: solid rgba(0, 0, 0, 0.733);
}

.charImg {
  filter: drop-shadow(2px 2px 2px 2px, #7a787885);
}

.customValidityWarn {
  @include validityWarn(rgba(255, 0, 0, 0.61));
}

.divAdd {
  &.gridTwoCol,
  &.gridThreeCol {
    & input {
      &[type="checkbox"] {
        @include size("unset", "", "unset", "");
      }
    }
  }
  &.gridTwoCol,
  &.divAntFam {
    @include widCGap(66, "%", 3, "%");
    border: var(--bs-border-width) solid var(--bs-border-color);
  }
  &.gridThreeCol {
    @include widCGap(50, "%", 1, "%");
  }
}

.entry {
  background-color: var(--secondary-color);
  color: var(--ant--secondary-color);
  border-color: var(--tertiary-color);
}

.fade-in-element {
  animation: fadeIn 1s ease-in;
}

.fade-in-late-element {
  animation: fadeIn 2.5s ease-in;
}

.fitSpaced,
[class*="Identif"] {
  padding: var(--frmpd);
}

.flexCenter {
  @include fCt;
}

.flexLineDiv {
  @include fStart;
  @include symGap(2);
}

.flexNoW {
  @include fNoW;
}

.flexNoWR,
[class$="flexDiv"] {
  @include fRNoW;
}

.flexNoWRSwitch {
  @include fRNoW;
}

.flexNoWC {
  @include fCNoW;
}

.flexStart {
  @include fStart;
}

.form-control {
  &.entry {
    background-color: var(--secondary-color);
    color: var(--ant--secondary-color);
    border-color: var(--tertiary-color);
  }
}

.form-padded {
  padding: var(--frmpd);
}

.fullCenteredFlex {
  display: flex;
  align-content: center;
  justify-content: center;
  justify-items: center;
  text-align: center;
}

.fsAnamGSpan {
  .labelIdentif {
    @include minMaxW(25, "vw", 70, "%");
  }
}

.gapped2v {
  @include symGap(2);
}

.gapped1v {
  @include symGap(1);
}

.gridAlItE {
  display: grid;
  align-items: end;
}

$paddingImg: 3px;

.gridChars {
  display: grid;
  grid-template: repeat(3, 1fr) / repeat(3, 1fr);
  overflow: auto;
  width: 100%;
  justify-items: center;
  position: relative;
  figure {
    z-index: 999;
  }
  figure,
  img {
    width: 100%;
    height: 15rem;
    object-fit: cover;
  }
  img {
    width: 98%;
    height: 98%;
    padding: $paddingImg;
    border: 3px solid #3d3d41;
  }
  figcaption {
    position: absolute;
    color: #ffffffe3;
  }
  canvas {
    pointer-events: none;
    position: absolute;
    transform: translate(0, calc($paddingImg * 2));
    padding: $paddingImg;
    border-radius: 2px;
    background: radial-gradient(circle at center, transparent, #1e1e1fbd);
  }
}

.gridThreeCol {
  @include widCGap(90, "%", 5, "%");
}

.gridTwoCol {
  @include widCGap(60, "%", 5, "%");
}

.fsInpNewUser {
  .divInpNewUser {
    padding-bottom: 2vh;
  }
}

.halfR {
  color: var(--bs-body-color);
  background-color: var(--bs-body-bg);
  box-shadow: var(--bslikesd);
  background-clip: padding-box;
  border: var(--bs-border-width) solid var(--bs-border-color);
  border-radius: var(--bs-border-radius);
}

.headerBtns {
  @include fCt;
}

.headerLogo {
  img {
    width: 60%;
    max-height: 100%;
  }
}

#loginCont {
  .loginInputCont2 {
    border-radius: var(--bs-border-radius);
  }
  input {
    &::placeholder {
      color: rgba(206, 203, 203, 0.486);
    }
  }
}

.modal-content {
  @include modal(80, 5, 900);
  button {
    &.btn-close {
      box-shadow: 0 0 0 0 transparent;
    }
  }
  p {
    color: #000 !important;
  }
  form {
    animation: fadeIn 2s ease-in-out;
    border-radius: var(--bs-border-radius);
    @include size("100", "%", "100", "%");
  }
  &.modal-alert {
    hgroup {
      row-gap: 2vh;
    }
    button {
      &.btn {
        text-shadow: 0.05rem 0.05rem 0.05rem rgba(0, 0, 0, 0.5);
        --bs-btn-border-color: transparent;
      }
    }
  }
  &.charsDlg {
    left: 0%;
    min-width: 99vw;
    padding: 1rem;
  }
  &.modal {
    &.charsDlg {
      left: 0%;
    }
  }
  &#loginDlg {
    width: unset;
    left: 5%;
    max-width: 88vw;
  }
}

.modal-link {
  section {
    &:first-child {
      width: 100%;
      display: flex;
      justify-content: space-between;
      :first-child,
      h3 {
        padding-left: 15vw;
        text-align: center;
      }
      :nth-child(2),
      .btn-close {
        padding-right: 0;
        padding-left: -10rem;
      }
    }
    &:not(:first-child) {
      text-align: left;
    }
    ol {
      padding-top: 2vh;
    }
  }
}

.modal-content-stk2 {
  @include modal(80, 10, 990);
}

.screenPanel {
  min-height: 100vh;
  background-color: radial-gradient(
    circle at left,
    var(--tertiary-color),
    var(--secondary-color)
  );
  z-index: 1055;
  > section {
    padding: 2%;
    padding-bottom: 1vh;
    &:has(input) {
      display: flex;
      flex-direction: column;
      gap: 5vh;
    }
  }
}

.table {
  &.table-hover {
    &:hover {
      border-width: 0 var(--bs-border-width);
    }
  }
}

.tipDlg {
  @include maxSize(50, "vw", 40, "vh");
}

[class*="carousel-control"] {
  &:has(svg) {
    background-color: var(--swhite);
    &:has([class*="circle"]) {
      border-radius: 50%;
    }
    svg {
      stroke: rgb(58, 58, 58);
      transform: scale(1.2);
    }
  }
}

[class*="form-"] {
  &:not([class*="-check"]):not([class*="-switch"]):not([class*="-padded"]):not(
      .form-label
    ) {
    box-shadow: var(--bslikesd);
  }
}

[class$="left"] {
  padding-right: 1%;
}

[class*="outputAv"] {
  text-align: center;
}

[class*="tabCel"] {
  margin: 0 1vw;
  padding: 1vh 1vw;
}

[id*="DDD"],
[id*="ddd"] {
  max-width: 10ch;
}

#activeUserPanel {
  #bActiveUser {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: flex-start;
    padding-bottom: 5vh;
    gap: 2vw;
    #panelActiveUser {
      display: flex;
      flex-flow: column wrap;
      align-items: flex-start;
      justify-content: flex-start;
      gap: 2vw;
      border: 2px ridge #000;
      border-radius: 0.5rem;
      padding: calc(1rem + 0.5%);
      box-shadow: 0.1rem 0.1rem 0.1rem var(--tertiary-color);
      background-color: var(--ant--secondary-color);
      .divOutpUser {
        display: flex;
        flex-flow: column wrap;
        label {
          font-style: italic;
          border-bottom: inset 0.02rem #a4a2a2d6;
        }
        output {
          font-weight: 500;
        }
      }
    }
  }
}

#bgDiv {
  margin: 0.5%;
  border-radius: 1vh;
  border: 0.3vh groove black;
  background-color: rgba(255, 255, 255, 0.897);
  min-width: 80vw;
  min-height: 98vh;
}

#classesDlg {
  @include fCt;
  #navClassIcons {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    width: 90%;
    gap: 5%;
  }
}

#elfWarrior {
  transform: rotate(90deg);
}

#loginBtnCont {
  justify-content: space-around;
}

#loginDlg {
  height: max-content;
  white-space: wrap;
  padding: 4%;
  border: solid rgba(0, 0, 0, 0.733);
  background: radial-gradient(
    circle at left,
    var(--tertiary-color),
    var(--secondary-color)
  );
  hgroup {
    padding-bottom: 1.5rem;
    h2 {
      font-size: 1.2rem;
      padding-left: 0.2rem;
    }
  }
  form {
    white-space: pre-wrap;
    nav {
      display: flex;
      flex-flow: row wrap;
      gap: 3vh;
    }
  }
  a {
    display: flex;
    align-items: center;
  }
  button {
    &:has(svg) {
      padding-left: 0.45rem;
    }
  }
  #loginInputCont3 {
    display: flex;
    align-items: baseline;
    #pw {
      margin-top: 0.5vh;
    }
  }
}

#regstNewUser {
  #hNewUser {
    button {
      height: fit-content;
    }
  }
  #sectSubmitNewUser {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: flex-start;
    padding-bottom: 5vh;
    gap: 2vw;
    button {
      flex-basis: 33%;
      box-shadow: 0.02rem 0.02rem 0.02rem 0.02rem rgba(0, 0, 0, 0.5);
      &:hover {
        transform: translate(-0.03rem, -0.03rem);
        box-shadow: 0.05rem 0.05rem 0.05rem 0.05rem rgba(0, 0, 0, 0.5);
      }
      &.btn-success {
        text-shadow: 0.1rem 0.1rem 0.1rem rgba(0, 0, 0, 0.5);
      }
      &.btn-warning {
        text-shadow: 0.05rem 0.05rem 0.05rem rgba(0, 0, 0, 0.5);
      }
    }
  }
}

#root {
  display: flex;
  flex-flow: column nowrap;
  min-height: 100vh;
  a {
    text-decoration: none;
  }
  header {
    margin: 0;
    padding-block: 2vh;
    height: 20%;
    width: 100%;
    background: linear-gradient(to right, #5e5d5dbb, #494747e1);
    border-bottom: 0.2rem ridge var(--ant--tertiary-color);
  }
  main {
    height: 100vh;
    min-height: 80%;
    min-width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    .errorCont {
      width: 75vw;
      padding: 3%;
      background-color: var(--ant--tertiary-color);
      border: ridge 2px;
      border-radius: 0.2rem;
      h2 {
        font-weight: bolder;
      }
      .errMessage {
        padding-top: 1.5vh;
        font-weight: 600;
        color: #ce3939c2;
      }
      p:not(.errMessage),
      .p:not(.errMessage) {
        font-weight: 300;
        font-style: italic;
        font-size: 0.8rem;
      }
    }
  }
  footer {
    height: 20%;
    width: 100%;
    display: grid;
    grid-template: 15% 90% / 100%;
    background-color: var(--ant--tertiary-color);
    ul {
      list-style: none;
    }
    #fSectPolicy {
      min-height: 2.8125rem;
      display: flex;
      flex-flow: row wrap;
      align-items: center;
      justify-content: center;
      text-align: center;
      background-color: var(--tertiary-color);
      a {
        color: var(--ant--tertiary-color);
      }
      p,
      .p {
        margin: 0;
        // padding: 0.75rem 3.75rem;
        font-size: 0.8125rem;
        line-height: 1.3125rem;
        text-align: center;
      }
    }
    #fSectSocial {
      padding-block: 5vh;
      padding-inline: 2vw;
      display: grid;
      align-items: center;
      justify-content: center;
      grid-template: 100% / repeat(3, 33%);
      p,
      .p,
      h1,
      h2 {
        @include footerHText;
      }
      a {
        @include footBText;
      }
    }
    #fSectSocialMedia {
      p,
      .p,
      h1,
      h2 {
        @include footerHText;
      }
      a {
        @include footerHText;
      }
      ul {
        display: grid;
        grid-template: repeat(2, 50%) / repeat(2, 15%);
        padding-left: 0.75rem;
        li {
          margin-bottom: 0.25rem;
        }
      }
    }
    section {
      > p,
      > .p {
        text-align: center;
      }
      &:not(:has(nav)) {
        padding-block: 0.5rem;
        ~ section {
          padding-top: 1.75vw !important;
        }
      }
    }
    :first-child {
      &:is(section:not([id*="Modal"])) {
        background: linear-gradient(to left, var(--react-bg), var(--react-bg));
        p,
        .p {
          color: #e2dddd9c;
          margin: 0 0 12vh 0;
        }
      }
    }
  }
  form {
    &.screenPanel {
      background: radial-gradient(circle at left, rgb(199, 199, 199), grey);
    }
  }
  hgroup ~ .btn-close {
    margin-left: 2vw;
  }
}

#spanHFlex {
  flex-direction: column-reverse;
}

#titleCont1 {
  display: flex;
  justify-content: space-between;
}

#userWarn {
  padding-top: 0.4rem;
}

@media screen and (max-width: 900px) {
  legend,
  .flexQ900NoW {
    @include fNoW;
  }

  .App {
    flex-direction: column;
    justify-content: center;
  }

  .btnsDiv {
    column-gap: 1.2rem;
  }

  .divAdd {
    &.gridTwoCol {
      @include maxCGapped(1, rem);
      &:not(.divAntFam) {
        padding: 1rem;
      }
    }
  }

  .divMain {
    &:not(#divConfirm):not(#divFreqOdont):not(#fsAnamGDiv3) {
      justify-content: space-between;
      @include widCGap(75, "%", 5, "%");
    }
  }

  .flexQ900NoWC,
  .labConfirm:not(label[for="confirmId"]),
  #genDiv,
  [id*="divConfirm"]:not(#divConfirm) {
    @include fCNoW;
  }

  #genDiv {
    white-space: normal;
  }

  #sectConfirmBut {
    @include fCNoW;
    row-gap: 2vh;
    & button {
      width: 60%;
    }
  }
}

@media screen and (max-width: 730px) {
  .gridChars {
    grid-template-columns: repeat(2, 1fr);
    :last-child:is(section) {
      display: grid;
      grid-column: span 2;
      grid-template-rows: repeat(2, 1fr);
      grid-template-columns: repeat(2, 1fr);
      width: 100%;
      justify-items: center;
      :first-child:is(figure) {
        grid-column: 0;
        grid-row: 1;
      }
      :nth-child(2):is(figure) {
        grid-column: 0;
        grid-row: 0;
      }
      :last-child:is(figure) {
        grid-column: 2;
        grid-row: 1;
      }
    }
  }
}

@media screen and (max-width: 460px) {
  .flexQ460NoW {
    @include fNoW;
  }

  .flexQ460NoWC {
    @include fCNoW;
  }
}

@media (orientation: portrait) and (max-width: 460px) {
}
